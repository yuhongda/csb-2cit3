{"version":3,"sources":["api.js","Story.jsx","App.js","index.js"],"names":["getStoryIds","params","a","axios","url","storyType","method","errorTitle","signal","controller","getStoryById","storyId","Loading","styled","div","Story","data","list","Object","values","slice","useState","setStoryId","requestFunctions","func","payload","success","refetch","title","by","style","width","margin","href","onClick","loading","spinning","error","message","size","type","showIcon","marginTop","defaultCurrent","pageSize","total","length","onChange","page","_","Container","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sOAEO,SAAeA,EAAtB,kC,4CAAO,WAA2BC,GAA3B,eAAAC,EAAA,+EACEC,IAAM,CACXC,IAAI,yCAAD,OAA2CH,EAAOI,UAAlD,sBACHC,OAAQ,MACRL,SACAM,WAAY,iCACZC,OAAM,UAAEP,EAAOQ,kBAAT,aAAE,EAAmBD,UANxB,4C,sBAUA,SAAeE,EAAtB,kC,4CAAO,WAA4BT,GAA5B,eAAAC,EAAA,+EACEC,IAAM,CACXC,IAAI,8CAAD,OAAgDH,EAAOU,QAAvD,sBACHL,OAAQ,MACRL,SACAM,WAAY,+BACZC,OAAM,UAAEP,EAAOQ,kBAAT,aAAE,EAAmBD,UANxB,4C,2GCEDI,EAAUC,IAAOC,IAAV,wHA0EEC,EAnED,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACTC,EAAQD,GAAQA,EAAK,IAAME,OAAOC,OAAOH,EAAK,IAAII,MAAM,EAAG,KAAQ,GACzE,EAA8BC,mBAASJ,EAAK,IAA5C,mBAAON,EAAP,KAAgBW,EAAhB,KAsBA,OACE,qCACE,cAAC,IAAD,CACEC,iBAAkB,CAChB,CACEC,KAAMd,EACNe,QAAS,CAAEd,aAGfe,QA7Be,SAAC,GAAuB,IAArBV,EAAoB,EAApBA,KAAMW,EAAc,EAAdA,QAC5B,SAA0CX,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAO,GAAjD,IAAQY,aAAR,MAAgB,GAAhB,MAAoBxB,WAApB,MAA0B,GAA1B,MAA8ByB,UAA9B,MAAmC,GAAnC,EACA,OACE,eAAC,IAAD,CACED,MACE,4CACM,iCAASC,OAGjBC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,UAN/B,UAQE,mBAAGC,KAAM7B,EAAT,SAAewB,IACf,cAAC,IAAD,IACA,4BACE,cAAC,IAAD,CAAQM,QAAS,kBAAMP,KAAvB,2BAgBFQ,QACE,cAAC,IAAD,CAAMC,UAAQ,EAAd,SACE,cAACxB,EAAD,MAGJyB,MAAO,gBAAGA,EAAH,EAAGA,MAAOV,EAAV,EAAUA,QAAV,OACL,mCACE,cAAC,IAAD,CACEW,QACE,qCACGD,EAAMC,QACP,cAAC,IAAD,CAAQJ,QAAS,kBAAMP,KAAWY,KAAK,QAAvC,wBAKJC,KAAK,QACLC,UAAQ,SAKhB,cAAC,IAAD,CACEX,MAAO,CAAEY,UAAW,IACpBC,eAAgB,EAChBC,SAAU,EACVC,MAAO5B,EAAK6B,OACZC,SAAU,SAACC,EAAMC,GAAP,OAAa3B,EAAWL,EAAK+B,EAAO,WC5EhDE,EAAYrC,IAAOC,IAAV,gJAQA,SAASqC,IACtB,OACE,eAACD,EAAD,WACE,6CACA,cAAC,IAAD,CACE3B,iBAAkB,CAChB,CACEC,KAAMxB,EACNyB,QAAS,CAAEpB,UAAW,gBAG1BqB,QAASX,OCpBjB,IAAMqC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACL,EAAD,MAEFC,K","file":"static/js/main.f030ae9e.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport async function getStoryIds(params) {\n  return axios({\n    url: `https://hacker-news.firebaseio.com/v0/${params.storyType}.json?print=pretty`,\n    method: \"get\",\n    params,\n    errorTitle: \"Get Hacker News stories failed\",\n    signal: params.controller?.signal\n  });\n}\n\nexport async function getStoryById(params) {\n  return axios({\n    url: `https://hacker-news.firebaseio.com/v0/item/${params.storyId}.json?print=pretty`,\n    method: \"get\",\n    params,\n    errorTitle: \"Get Hacker News story failed\",\n    signal: params.controller?.signal\n  });\n}\n","import { useState } from \"react\";\nimport {\n  Button,\n  Spin,\n  Alert,\n  Card,\n  Pagination,\n  Divider,\n  AutoComplete\n} from \"antd\";\nimport { getStoryById } from \"./api\";\nimport { AsyncRequest } from \"use-async-request\";\nimport styled from \"styled-components\";\n\nconst Loading = styled.div`\n  display: flex;\n  min-height: 100px;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Story = ({ data }) => {\n  const list = (data && data[0] && Object.values(data[0]).slice(0, 10)) || [];\n  const [storyId, setStoryId] = useState(list[0]);\n\n  const StorySuccess = ({ data, refetch }) => {\n    const { title = \"\", url = \"\", by = \"\" } = data?.[0];\n    return (\n      <Card\n        title={\n          <>\n            by: <strong>{by}</strong>\n          </>\n        }\n        style={{ width: 300, margin: \"0 auto\" }}\n      >\n        <a href={url}>{title}</a>\n        <Divider />\n        <p>\n          <Button onClick={() => refetch()}>refetch</Button>\n        </p>\n      </Card>\n    );\n  };\n\n  return (\n    <>\n      <AsyncRequest\n        requestFunctions={[\n          {\n            func: getStoryById,\n            payload: { storyId }\n          }\n        ]}\n        success={StorySuccess}\n        loading={\n          <Spin spinning>\n            <Loading />\n          </Spin>\n        }\n        error={({ error, refetch }) => (\n          <>\n            <Alert\n              message={\n                <>\n                  {error.message}\n                  <Button onClick={() => refetch()} size=\"small\">\n                    refetch\n                  </Button>\n                </>\n              }\n              type=\"error\"\n              showIcon\n            />\n          </>\n        )}\n      />\n      <Pagination\n        style={{ marginTop: 10 }}\n        defaultCurrent={1}\n        pageSize={1}\n        total={list.length}\n        onChange={(page, _) => setStoryId(list[page - 1])}\n      />\n    </>\n  );\n};\n\nexport default Story;\n","import \"antd/dist/antd.css\";\nimport styled from \"styled-components\";\nimport { getStoryIds } from \"./api\";\nimport Story from \"./Story\";\nimport { AsyncRequest } from \"use-async-request\";\n\nconst Container = styled.div`\n  text-align: center;\n  padding: 20px;\n  display: flex;\n  background-color: #fafafa;\n  flex-direction: column;\n`;\n\nexport default function App() {\n  return (\n    <Container>\n      <h1>Hacker News</h1>\n      <AsyncRequest\n        requestFunctions={[\n          {\n            func: getStoryIds,\n            payload: { storyType: \"topstories\" }\n          }\n        ]}\n        success={Story}\n      />\n    </Container>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}